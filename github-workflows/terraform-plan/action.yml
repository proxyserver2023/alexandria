name: TerraformPlan

inputs:
  stage:
    required: true
    type: string
  terraform_path:
    required: true
    default: "terraform/"
    type: string
  github-token:
    description: "GitHub token used to interact with GitHub API"
    required: false
    default: ${{ github.token }}

runs:
  using: "composite"
  steps:
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::625377802426:role/terraform-service-deployment-iam-role-${{ inputs.stage }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: "us-east-1"
        output-credentials: true
      id: creds

    - name: Verify Authentication
      shell: bash
      run: aws sts get-caller-identity

    - name: Deploy to S3 (Example)
      shell: bash
      run: aws s3 ls

    - name: Allow Debug logging
      shell: bash
      run: export TF_LOG=DEBUG

    - name: get-tf-env-vars
      shell: bash
      run: |
        #!/bin/bash

        # Create a new file
        echo "" > ${{ github.workspace }}/env_file

        # Loop over all environment variables
        for var in $(compgen -v); do
          # If the variable starts with TF_VAR_
          if [[ $var == TF_VAR_* ]]; then
            # Write the variable and its value to the file
            echo "export $var=${!var}" >> ${{ github.workspace }}/env_file
          fi
        done
    - name: terraform-plan
      uses: addnab/docker-run-action@v3
      with:
        options:
          -e AWS_ACCESS_KEY_ID=${{ steps.creds.outputs.aws-access-key-id }}
          -e AWS_SECRET_ACCESS_KEY=${{ steps.creds.outputs.aws-secret-access-key }}
          -e AWS_SESSION_TOKEN=${{ steps.creds.outputs.aws-session-token }}
          -e GITHUB_TOKEN=${{ inputs.github-token }}
          -e GITHUB_OWNER=proxyserver2023
          -e DD_API_KEY=${{ env.DD_API_KEY }}
          -e DD_APP_KEY=${{ env.DD_APP_KEY }}
          -v ${{ github.workspace }}:/work
        image: hashicorp/terraform
        run: |
          source /work/env_file
          cd /work/${{ inputs.terraform_path }}
          git config --global url."https://proxyserver2023:${GITHUB_TOKEN}@github.com/proxyserver2023".insteadOf "https://github.com/proxyserver2023"

          terraform init -backend-config=backend-${{ inputs.stage }}.tfvars
          terraform fmt -check
          terraform plan -var "stage=${{ inputs.stage }}" -out tfplan
